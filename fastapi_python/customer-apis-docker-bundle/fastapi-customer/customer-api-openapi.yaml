openapi: 3.0.3
info:
  title: Customer API
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /customers:
    get:
      summary: List customers
      security: [{ bearerAuth: [] }]
      parameters:
        - name: skip
          in: query
          schema: { type: integer, minimum: 0 }
        - name: limit
          in: query
          schema: { type: integer, minimum: 1, maximum: 100 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Create customer
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIn'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/{id}:
    get:
      summary: Get customer by id
      security: [{ bearerAuth: [] }]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not Found
    put:
      summary: Replace customer (with ETag check via If-Match)
      security: [{ bearerAuth: [] }]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
        - name: If-Match
          in: header
          required: false
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIn'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not Found
        '412':
          description: ETag precondition failed
    delete:
      summary: Delete customer
      security: [{ bearerAuth: [] }]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CustomerIn:
      type: object
      required: [first_name, last_name, email]
      properties:
        first_name: { type: string, minLength: 1, maxLength: 50 }
        last_name: { type: string, minLength: 1, maxLength: 50 }
        email: { type: string, format: email }
        phone: { type: string, nullable: true }
    Customer:
      allOf:
        - $ref: '#/components/schemas/CustomerIn'
        - type: object
          required: [id, etag]
          properties:
            id: { type: integer }
            etag: { type: string }